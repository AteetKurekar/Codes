 n=5 steps high. Davis can step on the following sequences of steps:
Count ways to reach the nth stair using step 1, 2 or 3
1 1 1 1 1
1 1 1 2
1 1 2 1 
1 2 1 1
2 1 1 1
1 2 2
2 2 1
2 1 2
1 1 3
1 3 1
3 1 1
2 3
3 2
There are 13 possible ways
=====================================================================================================================================
Solution:
Using REccursive approach:O(n^3)
   int findStep(int n) 
    { 
        if (n == 1 || n == 0) 
            return 1; 
        else if (n == 2) 
            return 2; 
  
        else
            return findStep(n - 3) + findStep(n - 2) 
                                   + findStep(n - 1); 
    } 
==========================================================================================================================================
Using dynamic programming:O(n)
    static int stepPerms(int n) {
    	int[] steps=new int[n+1];
    	steps[0]=1;//additionally defined for code
    	steps[1]=1;//ways to climb step 1
    	if(n==1) {
    		return steps[1];
    	}
    	steps[2]=2;//ways to climb step 2
    	if(n==2) {
    		return steps[2];
    	}
    	steps[3]=4;//ways to climb step 3
    	if(n==3) {
    		return steps[3];
    	}
    	
    	for(int i=4;i<=n;i++) {
    		steps[i]=steps[i-1]+steps[i-2]+steps[i-3];
    	}
    	
    	return steps[n];

    }
